name: ci
on:
  push:
    paths-ignore:
      - "docs/**"

permissions:
  contents: write
  pull-requests: write

env:
  NODE_VERSION: 18
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "${{ env.NODE_VERSION }}"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Yarn
        run: "yarn --pure-lockfile --cache-folder /tmp/.yarn_cache"
      - name: Lint
        run: echo "Linting"
      - name: Test
        run: echo "Testing"
      - name: Build
        run: echo "Building"
      - id: release
        if: "github.ref == 'refs/heads/main'"
        name: Release
        uses: google-github-actions/release-please-action@v3
        with:
          changelog-types: '[{"type":"feat","section":":rocket:  Features"},{"type":"fix","section":":bug:  Bug Fixes"},{"type":"refactor","section":":sunglasses:  Refactor","hidden":true},{"type":"perf","section":":bullettrain_front:  Performance Improvements"},{"type":"docs","section":"Documentation","hidden":false }]'
          package-name: YMNN_
          release-type: node
      - continue-on-error: true
        if: "${{ steps.release.outputs }}"
        name: "Release info"
        run: echo "${{ toJSON(steps.release.outputs) }}"
      - if: "${{ github.ref == 'refs/heads/main' && steps.release.outputs.release_created }}"
        name: Publish
        run: 'echo "Publishing"'
